name: Deploy Plungin

on:
    push:
        branches:
            - "master"
        paths:
            - "gradle.properties"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Get previous version
      id: getPreviousTag
      uses: WyriHaximus/github-action-get-previous-tag@v1
    - name: Get current version
      id: lookupParadisuVersion
      run: echo result=$(cat gradle.properties | grep "version" | cut -d'=' -f2) >> $GITHUB_OUTPUT
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag_prefix: ''
        custom_tag: ${{ steps.lookupParadisuVersion.outputs.result }}
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: temurin
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build
        gradle-home-cache-cleanup: true
    - run: mkdir staging && cp build/libs/ParadisuPlugin.jar staging
    - uses: actions/upload-artifact@v3
      with:
        name: ParadisuPlugin-Latest
        path: staging/ParadisuPlugin.jar
    - name: Generate release diff
      env:
        BEGIN_COMMIT: ${{ steps.getPreviousTag.outputs.tag }}
        END_COMMIT: ${{ steps.lookupParadisuVersion.outputs.result }}
      run: git fetch --tags --force && git log --pretty=format:"* %s (%h)" ${BEGIN_COMMIT}..${END_COMMIT} > release_notes.md
    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        artifacts: staging/ParadisuPlugin.jar
        allowUpdates: true
        bodyFile: "release_notes.md"
        draft: false
        prerelease: false
        tag: ${{ steps.lookupParadisuVersion.outputs.result }}
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload jar to server
      env:
        PTERODACTYL_TOKEN: ${{ secrets.PTERODACTYL_TOKEN }}
      run: |
        cp staging/ParadisuPlugin.jar ParadisuPlugin.jar
        upload_plugin () {
          local upload_url=$(curl "https://panel.paradisu.net/api/client/servers/${1}/files/upload" -H "Authorization: Bearer ${PTERODACTYL_TOKEN}" -X GET -s | jq -r .attributes.url)
          curl -F files=@ParadisuPlugin.jar "${upload_url}&directory=/plugins"
        }
        server_ids=(
          "978fd706"
          "1b063a16"
          "a0638f52"
          "517d0585"
        )
        for id in ${server_ids[@]}
        do
          upload_plugin ${id}
        done
